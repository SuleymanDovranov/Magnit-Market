"use strict";
const uuid = require("uuid");
module.exports = {
  up: async (queryInterface, DataTypes) => {
    await queryInterface.bulkInsert(
      "discounts",
      [
        {
          uuid: uuid.v4(),
          type: "percentage",
          amount: 15,
          from: "2022-03-13 12:00:00+05",
          to: "2022-06-25 12:00:00+05",
          dep_type: "both",
          collectionId: 1,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "price",
          amount: 33.22,
          from: "2022-03-13 12:00:00+05",
          to: "2022-06-25 12:00:00+05",
          dep_type: "both",
          productId: 1,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "bonused",
          required: 2,
          bonus: 1,
          from: "2022-03-13 12:00:00+05",
          to: "2022-05-25 12:00:00+05",
          dep_type: "both",
          campaignId: 1,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "bonused",
          required: 3,
          bonus: 2,
          from: "2022-03-13 12:00:00+05",
          to: "2022-05-25 12:00:00+05",
          dep_type: "both",
          productId: 2,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "percentage",
          amount: 10,
          from: "2022-03-13 12:00:00+05",
          to: "2022-05-29 12:00:00+05",
          dep_type: "both",
          collectionId: 10,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "price",
          amount: 20,
          from: "2022-03-13 12:00:00+05",
          to: "2022-05-23 12:00:00+05",
          dep_type: "both",
          productId: 5,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "bonused",
          required: 4,
          bonus: 1,
          from: "2022-03-13 12:00:00+05",
          to: "2022-05-22 12:00:00+05",
          dep_type: "both",
          productId: 9,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "bonused",
          required: 3,
          bonus: 1,
          from: "2022-03-13 12:00:00+05",
          to: "2022-05-22 12:00:00+05",
          dep_type: "both",
          productId: 12,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },

        {
          uuid: uuid.v4(),
          type: "percentage",
          amount: 25,
          from: "2022-03-13 12:00:00+05",
          to: "2022-05-20 12:00:00+05",
          dep_type: "both",
          collectionId: 5,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "percentage",
          amount: 33,
          from: "2022-03-13 12:00:00+05",
          to: "2022-06-15 12:00:00+05",
          dep_type: "both",
          productId: 16,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "bonused",
          required: 2,
          bonus: 2,
          from: "2022-03-13 12:00:00+05",
          to: "2022-06-15 12:00:00+05",
          dep_type: "both",
          productId: 11,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "bonused",
          required: 3,
          bonus: 3,
          from: "2022-03-13 12:00:00+05",
          to: "2022-05-25 12:00:00+05",
          dep_type: "both",
          productId: 20,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },

        {
          uuid: uuid.v4(),
          type: "percentage",
          amount: 50,
          from: "2022-03-13 12:00:00+05",
          to: "2022-08-25 12:00:00+05",
          dep_type: "both",
          collectionId: 18,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "percentage",
          amount: 77.7,
          from: "2022-03-13 12:00:00+05",
          to: "2022-06-25 12:00:00+05",
          dep_type: "both",
          productId: 25,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "bonused",
          required: 2,
          bonus: 1,
          from: "2022-03-13 12:00:00+05",
          to: "2022-05-25 12:00:00+05",
          dep_type: "both",
          collectionId: 25,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
        {
          uuid: uuid.v4(),
          type: "price",
          amount: 55,
          from: "2022-03-13 12:00:00+05",
          to: "2022-05-25 12:00:00+05",
          dep_type: "both",
          productId: 28,
          isActive: false,
          createdAt: DataTypes.fn("now"),
          updatedAt: DataTypes.fn("now"),
        },
      ],
      {}
    );
  },

  down: async (queryInterface, DataTypes) => {
    await queryInterface.bulkDelete("discounts", null, {});
  },
};
